
* 탈출문

- 탈출문은 프로그램의 실행 순서를 지정된 곳으로 이동시키는 문장으로 반복문 또는
  블록구조에서 빠져 나올 때 사용합니다.

- 탈출문의 키워드는 break, continue, return문이 있습니다.








1. break

- break는 반복문 내의 어떤 곳이든 위치할 수 있으며, 
 처리 도중에 break를 만나면 반복문을 곧바로 빠져나옵니다.

- 중첩 반복문의 경우에 내부 반복문에서 break가 사용되었을 경우 
  그 break문이 속한 내부 반복문만 빠져나오게 됩니다.

- 중첩 반복문에서 바깥쪽 반복문까지 종료시키려면 바깥쪽 반복문에 
  이름(label) 을 붙이고, "break 이름;"을 사용하면 됩니다.










2. continue

- continue문은 반복문 내의 어떤 곳이든지 위치할 수 있습니다.

- continue문을 만나면 반복문의 맨 처음으로 제어가 이동하여 
   다음 반복문을 위한 증/감식을 실행합니다.

- continue문을 만날 때마다 이후 실행문은 건너뛰어 실행되지 않습니다.
 





3. return

- return문은 메서드의 실행을 끝내고 결과 값을 호출된 부분에 반환하는 문장입니다.

- return문만 단독으로 사용했을 때는 호출된 곳으로 제어만 넘어가지만, 
  return문 뒤에 연산식과 함께 사용되면 식의 결과 값과 제어가 함께 넘어갑니다. 






* 배열(Array)

- 배열은 같은 데이터 유형 변수를 여러 개 선언해야 하는 불편함을 줄이기 위해 
  사용합니다.

- 자바에서는 배열도 일종의 데이터 타입으로 취급할 수 있기 때문에 
  배열을 정의하는 대괄호"[]"가 배열 변수명 앞에 오는 것이 가능합니다.


- 배열의 구조
배열 선언: <데이터 타입><배열 이름[]> or <데이터 타입[]><배열 이름>

배열 생성: <배열 이름> = new <데이터 타입[배열의 크기]>

- 자바의 배열은 선언시에는 크기를 명시할 수 없으며, 생성시에 크기를 명시한다.

- 배열은 기본데이터 타입이나 객체참조 데이터 타입 또는 다른 배열의 
  순차적인 집합체라고 할 수 있습니다.

- 하나의 배열에 여러가지 데이터형을 혼합해서 사용할 수 없습니다. 이런 배열의 특징을 
  동종모음(Homogeneous collection)이라고 합니다.

- 배열은 선언, 생성, 초기화의 과정을 통하여 만들어집니다.

- 선언 시에는 배열에 들어갈 데이터 타입을 결정하고, 
  생성 시 만들 배열의 크기를 결정합니다. 그리고 초기화 과정을 통하여 
  배열에 들어갈 값을 입력해 줍니다.

- 배열의 길이란 배열에 저장할 수 있는 전체 항목 수를 말하는데 
   코드에서 배열의 길이를 얻으려면 '배열변수이름.length'라는 코드를 사용합니다.



* 향상된 for 루프 (Enhanced for loop)

- 향상된 for 루프를 사용하면 배열 및 컬렉션에 들어있는 
   모든 원소들에 대한 반복 작업을 매우 쉽게 처리할 수 있습니다.


- for(배열의 값을 담을 변수 : 배열의 이름) {
  	실행문;
  }







